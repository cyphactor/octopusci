#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.dirname(__FILE__) + '/../lib')

require 'rubygems'
require 'octopusci/version'
require 'octopusci/job_store'
require 'trollop'

opts = Trollop::options do
  version "Octopusci v#{Octopusci::Version} (c) Andrew De Ponte"
  banner """Usage: octopusci-reset-redis [-r|-v|--version|-h|--help]"""
  opt :reset, "Actually reset the redis datastore", :short => "-r", :default => false
end

if opts[:reset]
	num_jobs = Octopusci::JobStore.size
	jobs = Octopusci::JobStore.list(0, num_jobs)

	jobs.each do |j|
	  # delete the actual job record
	  Octopusci::JobStore.redis.del("octopusci:jobs:#{j['id']}")

	  # delete the repo_name, branch_name job references
	  Octopusci::JobStore.redis.del("octopusci:#{j['repo_name']}:#{j['branch_name']}:jobs")

	  # delete the github payload for the repo_name, branch_name
	  Octopusci::JobStore.redis.del("octopusci:github_payload:#{j['repo_name']}:#{j['branch_name']}")

	end

	Octopusci::JobStore.redis.del('octopusci:job_count')
	Octopusci::JobStore.redis.del('octopusci:jobs')
	Octopusci::JobStore.redis.del('octopusci:stagelocker')
	Octopusci::JobStore.redis.del('queue:octopusci:commit')
else
	puts %Q{THIS IS A WARNING. THIS IS A DESTRUCTIVE COMMAND!

This command is designed to allow you to reset/clear out the values in your redis
data store associated with Octopusci. If you run this command with the proper option
it will actually get rid of all of the data stored in the redis data store for Octopusci.
It is intended to be used very rarely and only by people that understand exactly what it
is going to do (primarily Octopusci Developers).

To go forward and actually reset the redis data store with respect to Octopusci run it using
the following example.

Example:
octopusci-reset-redis -r

}

end
